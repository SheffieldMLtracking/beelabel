# This is a GitHub Actions workflow that builds the package and publishes it to the PyPI, the Python Package Index.
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# Workflow syntax for GitHub Actions
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

# Publishing package distribution releases using GitHub Actions CI/CD workflows
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

# See:"Building and Publishing" on the Python Packaging User Guide
# https://packaging.python.org/en/latest/guides/section-build-and-publish/

# This workflow was designed based on this guide:
# Publishing package distribution releases using GitHub Actions CI/CD workflows
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

# It runs whenever we publish a new release.
# https://docs.github.com/en/repositories/releasing-projects-on-github
on: push
name: Python package
jobs:
  test:
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        # https://devguide.python.org/versions/
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install package in editable mode with extra testing dependencies
          pip install -e .[test]
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest

  build:
    name: Build distribution
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install build
        run: |
          python -m pip install --upgrade pip
          python -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-test-pypi:
    name: Publish Python distribution to test PyPI
    needs:
      - build
    runs-on: ubuntu-22.04
    environment:
      name: testpypi
      url: https://test.pypi.org/project/beelabel/
    permissions:
      # IMPORTANT: mandatory for trusted publishing
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
